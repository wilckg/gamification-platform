# Generated by Django 5.2 on 2025-05-16 22:05

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Challenge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Título")),
                ("description", models.TextField(verbose_name="Descrição")),
                ("points", models.IntegerField(verbose_name="Pontos")),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("EASY", "Easy"),
                            ("MEDIUM", "Medium"),
                            ("HARD", "Hard"),
                        ],
                        default="EASY",
                        max_length=10,
                        verbose_name="Dificuldade",
                    ),
                ),
                (
                    "challenge_type",
                    models.CharField(
                        choices=[
                            ("DESCRIPTION", "Description"),
                            ("CODE", "Code"),
                            ("SINGLE_CHOICE", "Single Choice"),
                            ("MULTIPLE_CHOICE", "Multiple Choice"),
                        ],
                        default="CODE",
                        max_length=20,
                        verbose_name="Tipo de Desafio",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Linguagem de Programação",
                    ),
                ),
                (
                    "starter_code",
                    models.TextField(
                        blank=True, null=True, verbose_name="Código Inicial"
                    ),
                ),
                (
                    "solution_code",
                    models.TextField(
                        blank=True, null=True, verbose_name="Código Solução"
                    ),
                ),
                (
                    "expected_output",
                    models.TextField(
                        blank=True, null=True, verbose_name="Saída Esperada"
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        null=True,
                        verbose_name="Data de Início",
                    ),
                ),
                (
                    "end_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Término"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo?")),
                ("order", models.PositiveIntegerField(default=0, verbose_name="Ordem")),
            ],
            options={
                "verbose_name": "Desafio",
                "verbose_name_plural": "Desafios",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Track",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Título")),
                ("description", models.TextField(verbose_name="Descrição")),
                (
                    "icon",
                    models.CharField(blank=True, max_length=50, verbose_name="Ícone"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo?")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="Ordem")),
            ],
            options={
                "verbose_name": "Trilha",
                "verbose_name_plural": "Trilhas",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="Texto da Questão")),
                ("order", models.PositiveIntegerField(default=0, verbose_name="Ordem")),
                (
                    "challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="challenges.challenge",
                        verbose_name="Desafio",
                    ),
                ),
            ],
            options={
                "verbose_name": "Questão",
                "verbose_name_plural": "Questões",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Option",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="Texto da Opção")),
                (
                    "is_correct",
                    models.BooleanField(default=False, verbose_name="Está Correta?"),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="Ordem")),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options",
                        to="challenges.question",
                        verbose_name="Questão",
                    ),
                ),
            ],
            options={
                "verbose_name": "Opção",
                "verbose_name_plural": "Opções",
                "ordering": ["order"],
            },
        ),
        migrations.AddField(
            model_name="challenge",
            name="track",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="challenges",
                to="challenges.track",
                verbose_name="Trilha",
            ),
        ),
        migrations.CreateModel(
            name="UserChallenge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "submission_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Submissão"
                    ),
                ),
                (
                    "answer",
                    models.TextField(
                        blank=True, null=True, verbose_name="Resposta Descritiva"
                    ),
                ),
                (
                    "code",
                    models.TextField(
                        blank=True, null=True, verbose_name="Código Submetido"
                    ),
                ),
                (
                    "is_correct",
                    models.BooleanField(default=False, verbose_name="Está Correto?"),
                ),
                (
                    "points_awarded",
                    models.BooleanField(
                        default=False, verbose_name="Pontos Atribuídos?"
                    ),
                ),
                (
                    "feedback",
                    models.TextField(blank=True, null=True, verbose_name="Feedback"),
                ),
                (
                    "code_output",
                    models.TextField(
                        blank=True, null=True, verbose_name="Saída do Código"
                    ),
                ),
                (
                    "obtained_points",
                    models.IntegerField(default=0, verbose_name="Pontos Obtidos"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pendente"),
                            ("CORRECT", "Correto"),
                            ("INCORRECT", "Incorreto"),
                            ("PARTIAL", "Parcialmente Correto"),
                        ],
                        default="PENDING",
                        max_length=10,
                        verbose_name="Status",
                    ),
                ),
                (
                    "submitted_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Submetido em"
                    ),
                ),
                (
                    "evaluated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Avaliado em"
                    ),
                ),
                (
                    "challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_submissions",
                        to="challenges.challenge",
                        verbose_name="Desafio",
                    ),
                ),
                (
                    "selected_options",
                    models.ManyToManyField(
                        blank=True,
                        to="challenges.option",
                        verbose_name="Opções Selecionadas",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="challenge_submissions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Submissão de Desafio",
                "verbose_name_plural": "Submissões de Desafios",
                "ordering": ["-submitted_at"],
                "unique_together": {("user", "challenge")},
            },
        ),
        migrations.CreateModel(
            name="UserTrackProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Completado em"
                    ),
                ),
                (
                    "is_completed",
                    models.BooleanField(default=False, verbose_name="Completo?"),
                ),
                (
                    "completed_challenges",
                    models.ManyToManyField(
                        blank=True,
                        to="challenges.challenge",
                        verbose_name="Desafios Completados",
                    ),
                ),
                (
                    "track",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_progress",
                        to="challenges.track",
                        verbose_name="Trilha",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="track_progress",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Progresso na Trilha",
                "verbose_name_plural": "Progressos nas Trilhas",
                "unique_together": {("user", "track")},
            },
        ),
    ]
